_ai()
{
local cur prev
_init_completion || return
local GENERIC_APT_GET_OPTIONS='-d -m -t -u -y --allow-change-held-packages
--allow-downgrades --allow-insecure-repositories --allow-remove-essential
--allow-unauthenticated --arch-only --assume-no --assume-yes --download
--download-only --fix-missing --fix-policy --ignore-hold --ignore-missing
--install-recommends --install-suggests --only-upgrade --print-uris
--remove --show-upgraded --target-release --trivial-only --upgrade'

# Complete a -t<SPACE><TAB>
case $prev in
    -t|--target-release)
        COMPREPLY=( $( compgen -W "$(apt-cache policy | egrep -o 'a=[^,]*|n=[^,]*' | cut -f2- -d= | sort -u)" -- "$cur" ) )
        return 0
    ;;
esac

# Options for arguments
if [[ "$cur" == -* ]]; then
    COMPREPLY=( $( compgen -W '-s -t --auto-remove --download --dry-run
--fix-broken --fix-missing --fix-policy --force-yes --ignore-hold
--purge --reinstall --simulate --show-progress --solver --trivial-only
--target-release --verbose-versions'"$GENERIC_APT_GET_OPTIONS" -- "$cur" ) )
    return 0 
fi

# Complete a <TAB><TAB>
COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
if [[ "$cur" == ./* || "$cur" == /* ]]; then
    _filedir "deb"
fi
return 0
} &&
complete -F _ai ai
# ex: ts=4 sw=4 et filetype=sh
